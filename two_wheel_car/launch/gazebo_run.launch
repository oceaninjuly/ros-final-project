<?xml version="1.0"?>
<launch>
    <!-- 将 Urdf 文件的内容加载到参数服务器 -->
    <param name="robot_description" command="$(find xacro)/xacro $(find two_wheel_car)/urdf/two_wheel_car.xacro" />
    <!-- 启动 gazebo -->
    <!-- these are the arguments you can pass this launch file, for example paused:=true -->
    <arg name="paused" default="false"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="true"/>

    <!-- 加载世界 -->
    <!-- <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find two_wheel_car)/worlds/house_2.world"/>
        <arg name="debug" value="$(arg debug)" />
        <arg name="gui" value="$(arg gui)" />
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="$(arg use_sim_time)"/>
        <arg name="headless" value="$(arg headless)"/>
    </include> -->
    <include file="$(find exp)/launch/world.launch"/>

    <!-- 在 gazebo 中显示机器人模型  -x -27 -y -5 -z 0  -->
    <node pkg="gazebo_ros" type="spawn_model" name="model" args="-urdf -model mycar -param robot_description"  />

    <!-- 启动 rviz -->
    <!-- <node pkg="rviz" type="rviz" name="rviz" args="-d $(find two_wheel_car)/rviz_config/odom.rviz" /> -->

    <!-- 关节以及机器人状态发布节点 -->
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

    <!--动态自主导航-->
    <!-- 启动SLAM节点 -->
    <include file="$(find two_wheel_car)/launch/slam.launch" />
    <!-- 运行move_base节点 -->
    <include file="$(find two_wheel_car)/launch/path.launch" />
    <!-- 运行rviz -->
    <node pkg="rviz" type="rviz" name="rviz" args="-d $(find two_wheel_car)/rviz_config/navi.rviz" />

    <!--根据已有地图的静态主动导航-->
    <!-- <include file="$(find two_wheel_car)/launch/navi.launch" /> -->

</launch>
